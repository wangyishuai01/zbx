package com.cn.zbx.controller;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.disk.DiskFileItem;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.cn.zbx.util.HttpUtil;
import com.cn.zbx.util.ImgCompress;
import com.cn.zbx.util.JsonUtil;
import com.cn.zbx.util.PathUtil;

@Controller
@RequestMapping(value="upload")
public class UploadController {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(UploadController.class);
	
	@RequestMapping(value="httpUpload")
	@ResponseBody
	public void httpUpload(HttpServletRequest request,HttpServletResponse response){
		LOGGER.info("httpUpload ===============================");
		MultipartHttpServletRequest req = (MultipartHttpServletRequest) request;
		MultipartFile fileM = req.getFile("file");
		
        CommonsMultipartFile cf= (CommonsMultipartFile)fileM; 
        DiskFileItem fi = (DiskFileItem)cf.getFileItem(); 
        File file = fi.getStoreLocation();
		
		String fileUrl;
		try {
			response.setContentType("text/html");
			fileUrl = HttpUtil.httpUpload("http://123.103.61.117/moko/upload/fileUpload", file);  //路径为测试路径
			LOGGER.info("httpUpload return fileUrl => :{}",fileUrl+"--------------");
			PrintWriter out = response.getWriter();
			out.print(fileUrl);
			out.flush();  
			out.close();
		} catch (IOException e1) {
		}
	}
	
	@RequestMapping(value="upload")
	@ResponseBody
	public void upload(HttpServletRequest request,HttpServletResponse response,@RequestParam(value = "file", required = false) MultipartFile file){
		LOGGER.info("upload ===============================");

		String fileName = file.getOriginalFilename();
		String suffix = fileName.substring (fileName.lastIndexOf("."));  
		String name = UUID.randomUUID().toString().replace("-", "");
		File path = PathUtil.getPathByCatalinaHomePath(name + suffix);
		
		try {
			//保存图片
			file.transferTo(path);
		} catch (IllegalStateException | IOException e2) {
		}
		
		try {
			//创建缩略图
			ImgCompress.resizeByWidth(path.toString(), 360);
		} catch (IOException e1) {
		}
		
		String string = path.toString().replace("\\", "/");
		string = string.substring(string.indexOf("files")-1, string.length());
		String url = "http://" + request.getServerName() + ":" + request.getServerPort() + string;
		LOGGER.info("upload return url => :{}",url+"--------------");
		try {
			response.setContentType("text/html");
			PrintWriter out = response.getWriter();
			out.print(url);//返回jsonp格式数据  
			out.flush();  
			out.close();
		} catch (IOException e) {
		}
	}
	
	@RequestMapping(value="fileUpload")
	@ResponseBody
	public void fileUpload(HttpServletRequest request,HttpServletResponse response){
		LOGGER.info("fileUpload ===============================");
		
		MultipartHttpServletRequest req = (MultipartHttpServletRequest) request;
		MultipartFile file = req.getFile("file");
		String fileName = file.getOriginalFilename();
		String suffix = fileName.substring (fileName.lastIndexOf("."));  
		String name = UUID.randomUUID().toString().replace("-", "");
		File path = PathUtil.getPathByCatalinaHomePath(name + suffix);
		
		try {
			//保存图片
			file.transferTo(path);
		} catch (IllegalStateException | IOException e2) {
		}
		
		try {
			//创建缩略图
			ImgCompress.resizeByWidth(path.toString(), 360);
		} catch (IOException e1) {
		}
		
		String string = path.toString().replace("\\", "/");
		string = string.substring(string.indexOf("files")-1, string.length());
		String url = "http://" + request.getServerName() + ":" + request.getServerPort() + string;
		LOGGER.info("fileUpload return url => :{}",url+"--------------");
		try {
			response.setContentType("text/html");
			PrintWriter out = response.getWriter();
			out.print(url);//返回jsonp格式数据  
			out.flush();  
			out.close();
		} catch (IOException e) {
		}
	}
	
	@RequestMapping(value="fileUploads")
	@ResponseBody
	public void fileUploads(HttpServletRequest request,HttpServletResponse response){
		
		MultipartHttpServletRequest req = (MultipartHttpServletRequest) request;
		List<MultipartFile> files2 = req.getFiles("files");
		List<String> list = new ArrayList<String>();
		for (MultipartFile file : files2) {
			String fileName = file.getOriginalFilename();
			String suffix = fileName.substring (fileName.lastIndexOf("."));  
			fileName = UUID.randomUUID().toString().replace("-", "")+"-"+suffix;
			File path = PathUtil.getPathByCatalinaHomePath(fileName);
			try {
				file.transferTo(path);
				String string = path.toString().replace("\\", "/");
				string = string.substring(string.indexOf("files")-1, string.length());
				String url = "http://" + request.getServerName() + ":" + request.getServerPort() + string;
				list.add(url);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		try {
			response.setContentType("text/html");
			PrintWriter out = response.getWriter();
			out.println(JsonUtil.toJson(list));//返回jsonp格式数据  
			out.flush();  
			out.close();
		} catch (IOException e) {
		}
	}
	
	
	public static void main(String[] args) {
		String s = "D:java_softwore/apache-tomcat-8.0.27/wtpwebapps/moko/files/year2016/month5/Week3/day4/hour19/minute_10_0/ed00085aa62c4192a27c3acd68a63bf4.txt";
		String substring = s.substring(s.indexOf("moko")-1, s.length());
		String sbustr = substring.substring(substring.indexOf("."), substring.length());
		System.out.println(s.substring(0,s.length()-sbustr.length()));
	}
}
